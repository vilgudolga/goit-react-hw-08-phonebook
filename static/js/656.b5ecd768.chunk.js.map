{"version":3,"file":"static/js/656.b5ecd768.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/index.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/index.jsx","components/ContactList/index.jsx","components/Filter/index.jsx","pages/ContactsPage/index.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paragraph\":\"ContactForm_paragraph__nRyTj\",\"input\":\"ContactForm_input__Bl93P\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleItems = createSelector(\n  [selectItems, selectFilter],\n  (items, filter) => {\n    if (filter === '') return items;\n    const filteredArray = items.filter(item => {\n      const filtered = filter.toLowerCase();\n      return item.name.toLowerCase().includes(filtered);\n    });\n    return filteredArray;\n  }\n);\n","import styles from './ContactForm.module.css';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectItems } from 'redux/contacts/selectors';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const nameArray = items.map(item => item.name);\n    if (nameArray.includes(name)) {\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Form className=\"border rounded p-4\" onSubmit={handleSubmit}>\n      <p className={styles.paragraph}>Enter Contact</p>\n      <Form.Group className=\"mb-3\" controlId=\"inputName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"inputNumber\">\n        <Form.Label>Number</Form.Label>\n        <Form.Control\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Form.Group>\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Contact_btn__JzanX\"};","import styles from './Contact.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button } from 'react-bootstrap';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <span className=\"me-2\">\n        {contact.name}: {contact.number}\n      </span>\n      <Button\n        type=\"button\"\n        className={styles.btn}\n        variant=\"outline-primary\"\n        onClick={handleDelete}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styles from './ContactList.module.css';\nimport { Contact } from 'components/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleItems } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const visibleItems = useSelector(selectVisibleItems);\n\n  return (\n    <ul className=\"list-unstyled py-4\">\n      {visibleItems.map(contact => (\n        <li key={contact.id} className={styles.item}>\n          <Contact contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { handleFilter } from 'redux/contacts/contactsSlice';\nimport { Form } from 'react-bootstrap';\n\nexport const Filter = () => {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(handleFilter(filter));\n  }, [filter, dispatch]);\n\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <Form className=\"mb-1\">\n      <Form.Group>\n        <Form.Label>Find contacts by Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { ContactList } from 'components/ContactList';\nimport { Filter } from 'components/Filter';\nimport { Loader } from 'components/Loader';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Stack } from 'react-bootstrap';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"text-center my-1\">Contacts</h1>\n      <Stack\n        className=\"justify-content-center align-items-start mt-4\"\n        direction=\"horizontal\"\n        gap={5}\n      >\n        <div>\n          <ContactForm />\n        </div>\n        <div>\n          <Filter />\n          {isLoading && !error ? <Loader /> : <ContactList />}\n        </div>\n      </Stack>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleItems","createSelector","filter","item","filtered","toLowerCase","name","includes","ContactForm","dispatch","useDispatch","useSelector","Form","className","onSubmit","evt","preventDefault","form","currentTarget","elements","value","number","map","alert","addContact","reset","styles","controlId","type","pattern","title","required","Button","Contact","contact","variant","onClick","deleteContact","id","ContactList","visibleItems","Filter","useState","setFilter","useEffect","handleFilter","onChange","e","target","fetchContacts","Stack","direction","gap","Loader"],"sourceRoot":""}