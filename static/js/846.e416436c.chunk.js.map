{"version":3,"file":"static/js/846.e416436c.chunk.js","mappings":"gOAAaA,EAAiB,SAACC,GAAD,OAAWA,EAAMC,QAAjB,EACjBC,EAAgB,SAACF,GAAD,OAAWA,EAAMG,QAAQA,OAAzB,EAEhBC,EAAyB,SAACJ,GACnC,OAAOA,EAAMC,SAASI,MAAMC,QAAO,SAAAC,GAAO,OACtCA,EAAQC,KAAKC,cAAcC,SAASV,EAAMG,QAAQA,QAAQM,cADpB,GAG7C,EAEYE,EAAgB,SAAAX,GAC3B,OAAOA,EAAMC,SAASW,SACvB,ECVD,EAA0B,wBAA1B,EAA0D,sB,SCM7CC,EAAS,WACpB,IAAMV,GAAUW,EAAAA,EAAAA,IAAYZ,GACtBa,GAAWC,EAAAA,EAAAA,MAEjB,OACE,iBAAKC,UAAWC,EAAhB,WACE,mDACA,kBACED,UAAWC,EACXC,KAAK,OACLX,KAAK,SACLY,MAAOjB,EACPkB,SAAU,SAAAC,GAAC,OAAIP,GAASQ,EAAAA,EAAAA,IAAUD,EAAEE,OAAOJ,OAAhC,MAIlB,E,UCtBD,EAAuB,0BAAvB,EAA0D,4BAA1D,EAA6F,0BCUhFK,EAAc,WACzB,IAAMxB,GAAWa,EAAAA,EAAAA,IAAYf,GACvBgB,GAAWC,EAAAA,EAAAA,MAEXU,GAAmBZ,EAAAA,EAAAA,IAAYV,GAErC,OACE,eAAIa,UAAWC,EAAf,SACGjB,EAASI,MAAMsB,OACZD,EAAiBE,KAAI,SAAArB,GAAO,OAC1B,gBAAIU,UAAWC,EAAf,UACGX,EAAQC,KADX,IACkBD,EAAQsB,QACxB,mBACEZ,UAAWC,EACXY,QAAS,kBAAMf,GAASgB,EAAAA,EAAAA,IAAcxB,EAAQyB,IAArC,EAFX,sBAF+BzB,EAAQyB,GADf,IAW5B,eAGT,ECjCD,EAAuB,4BAAvB,EAA2D,6BAA3D,EAAiG,8BAAjG,EAAyI,+BCM5HC,EAAgB,WAC3B,IAAMhC,GAAWa,EAAAA,EAAAA,IAAYf,GACvBmC,GAAUC,EAAAA,EAAAA,QAAO,MACjBC,GAAYD,EAAAA,EAAAA,QAAO,MACnBpB,GAAWC,EAAAA,EAAAA,MA0BjB,OACE,gBAAKqB,SAAUnB,EAAf,UACE,kBAAMD,UAAWC,EAAaoB,SA1BT,SAAAhB,GACvBA,EAAEiB,iBACF,IAAMC,EAAcN,EAAQO,QAAQrB,MAC9BsB,EAAgBN,EAAUK,QAAQrB,MAEtCnB,EAASI,MAAMsC,MACb,SAAApC,GAAO,OACLA,EAAQC,OAASgC,GAAejC,EAAQsB,SAAWa,CAD9C,IAITE,MAAM,GAAD,OAAIJ,EAAJ,6BAIPzB,GACE8B,EAAAA,EAAAA,IAAW,CACTrC,KAAMgC,EACNX,OAAQa,KAGZR,EAAQO,QAAQrB,MAAQ,GACxBgB,EAAUK,QAAQrB,MAAQ,GAC3B,EAIG,WACE,8BACE,kCACA,kBACEH,UAAWC,EACXC,KAAK,OACLX,KAAK,OACLsC,UAAQ,EACRC,IAAKb,EACLc,QAAQ,yHACRC,MAAM,+IAGV,8BACE,oCACA,kBACEhC,UAAWC,EACXC,KAAK,OACLX,KAAK,SACLsC,UAAQ,EACRE,QAAQ,yFACRC,MAAM,+FACNF,IAAKX,QAGT,mBAAQjB,KAAK,SAASF,UAAWC,EAAjC,6BAMP,EC7Dc,SAASgC,IACtB,IAAMnC,GAAWC,EAAAA,EAAAA,MACXJ,GAAYE,EAAAA,EAAAA,IAAYH,GAM9B,OAJAwC,EAAAA,EAAAA,YAAU,WACRpC,GAASqC,EAAAA,EAAAA,MACV,GAAE,CAACrC,KAGF,iCACE,SAACsC,EAAA,EAAD,WACE,gDAEF,SAACpB,EAAD,KACA,yBAAMrB,GAAa,4BACnB,SAAEC,EAAF,KACA,SAACY,EAAD,MAGL,C","sources":["redux/contact/selectors.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/ContactEditor/ContactEditor.module.css?ead8","components/ContactEditor/ContactEditor.jsx","pages/Contacts.js"],"sourcesContent":["export const selectContacts = (state) => state.contacts;\nexport const selectFilters = (state) => state.filters.filters;\n\nexport const selectFilteredContacts = (state) => {\n    return state.contacts.items.filter(contact =>\n        contact.name.toLowerCase().includes(state.filters.filters.toLowerCase())\n    );\n};\n\nexport const selectLoading = state => {\n  return state.contacts.isLoading;\n};","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"Filter_section__SYoc3\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contact/FiltersSlice';\nimport { selectFilters } from 'redux/contact/selectors';\n\nimport styles from './Filter.module.css';\n\nexport const Filter = () => {\n  const filters = useSelector(selectFilters);\n  const dispatch = useDispatch();\n\n  return (\n    <div className={styles.section}>\n      <h2>Find contacts by name</h2>\n      <input\n        className={styles.input}\n        type=\"text\"\n        name=\"filter\"\n        value={filters}\n        onChange={e => dispatch(setFilter(e.target.value))}\n      ></input>\n    </div>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"button\":\"ContactList_button__7kL4l\",\"text\":\"ContactList_text__+NWAW\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilteredContacts,\n} from 'redux/contact/selectors.js';\nimport { deleteContact } from 'redux/contact/operations';\n\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={styles.list}>\n      {contacts.items.length\n        ? filteredContacts.map(contact => (\n            <li className={styles.text} key={contact.id}>\n              {contact.name} {contact.number}\n              <button\n                className={styles.button}\n                onClick={() => dispatch(deleteContact(contact.id))}\n              >\n                Delete\n              </button>\n            </li>\n          ))\n        : 'No contacts'}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  deleteContact: PropTypes.func,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactEditor_form__U4ufl\",\"input\":\"ContactEditor_input__Nbns0\",\"button\":\"ContactEditor_button__yGZhk\",\"wrapper\":\"ContactEditor_wrapper__1cePY\"};","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contact/operations';\nimport { selectContacts } from 'redux/contact/selectors';\n\nimport styles from './ContactEditor.module.css';\n\nexport const ContactEditor = () => {\n  const contacts = useSelector(selectContacts);\n  const nameRef = useRef(null);\n  const numberRef = useRef(null);\n  const dispatch = useDispatch();\n\n  const handleAddContact = e => {\n    e.preventDefault();\n    const contactName = nameRef.current.value;\n    const contactNumber = numberRef.current.value;\n    if (\n      contacts.items.find(\n        contact =>\n          contact.name === contactName && contact.number === contactNumber\n      )\n    ) {\n      alert(`${contactName} is already in contacts`);\n      return;\n    }\n\n    dispatch(\n      addContact({\n        name: contactName,\n        number: contactNumber,\n      })\n    );\n    nameRef.current.value = '';\n    numberRef.current.value = '';\n  };\n\n  return (\n    <div lassName={styles.wrapper}>\n      <form className={styles.form} onSubmit={handleAddContact}>\n        <label>\n          <h2>Name</h2>\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            required\n            ref={nameRef}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n        </label>\n        <label>\n          <h2>Number</h2>\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"number\"\n            required\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            ref={numberRef}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactEditor } from 'components/ContactEditor/ContactEditor';\nimport { fetchContacts } from 'redux/contact/operations';\nimport { selectLoading } from 'redux/contact/selectors';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <ContactEditor />\n      <div>{isLoading && 'Request in progress...'}</div>\n      < Filter />\n      <ContactList />\n    </>\n  );\n}"],"names":["selectContacts","state","contacts","selectFilters","filters","selectFilteredContacts","items","filter","contact","name","toLowerCase","includes","selectLoading","isLoading","Filter","useSelector","dispatch","useDispatch","className","styles","type","value","onChange","e","setFilter","target","ContactList","filteredContacts","length","map","number","onClick","deleteContact","id","ContactEditor","nameRef","useRef","numberRef","lassName","onSubmit","preventDefault","contactName","current","contactNumber","find","alert","addContact","required","ref","pattern","title","Contacts","useEffect","fetchContacts","Helmet"],"sourceRoot":""}