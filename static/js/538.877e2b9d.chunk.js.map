{"version":3,"file":"static/js/538.877e2b9d.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","../node_modules/react-bootstrap/esm/createUtilityClasses.js","../node_modules/react-bootstrap/esm/Stack.js","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"paragraph\":\"ContactForm_paragraph__nRyTj\",\"input\":\"ContactForm_input__Bl93P\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items;\nexport const selectFilter = state => state.contacts.filter;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleItems = createSelector(\n  [selectItems, selectFilter],\n  (items, filter) => {\n    if (filter === '') return items;\n    const filteredArray = items.filter(item => {\n      const filtered = filter.toLowerCase();\n      return item.name.toLowerCase().includes(filtered);\n    });\n    return filteredArray;\n  }\n);\n","import styles from './ContactForm.module.css';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { selectItems } from 'redux/contacts/selectors';\nimport { Form } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const items = useSelector(selectItems);\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n    const nameArray = items.map(item => item.name);\n    if (nameArray.includes(name)) {\n      return alert(`${name} is already in contacts.`);\n    }\n    dispatch(addContact({ name, number }));\n    form.reset();\n  };\n\n  return (\n    <Form className=\"border rounded p-4\" onSubmit={handleSubmit}>\n      <p className={styles.paragraph}>Enter Contact</p>\n      <Form.Group className=\"mb-3\" controlId=\"inputName\">\n        <Form.Label>Name</Form.Label>\n        <Form.Control\n          className={styles.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"inputNumber\">\n        <Form.Label>Number</Form.Label>\n        <Form.Control\n          className={styles.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Form.Group>\n      <Button type=\"submit\">Add Contact</Button>\n    </Form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Contact_btn__JzanX\"};","import styles from './Contact.module.css';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Button } from 'react-bootstrap';\n\nexport const Contact = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deleteContact(contact.id));\n\n  return (\n    <>\n      <span className=\"me-2\">\n        {contact.name}: {contact.number}\n      </span>\n      <Button\n        type=\"button\"\n        className={styles.btn}\n        variant=\"outline-primary\"\n        onClick={handleDelete}\n      >\n        Delete\n      </Button>\n    </>\n  );\n};\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n","import styles from './ContactList.module.css';\nimport { Contact } from 'components/Contact/Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleItems } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const visibleItems = useSelector(selectVisibleItems);\n\n  return (\n    <ul className=\"list-unstyled py-4\">\n      {visibleItems.map(contact => (\n        <li key={contact.id} className={styles.item}>\n          <Contact contact={contact} />\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { handleFilter } from 'redux/contacts/contactsSlice';\nimport { Form } from 'react-bootstrap';\n\nexport const Filter = () => {\n  const [filter, setFilter] = useState('');\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(handleFilter(filter));\n  }, [filter, dispatch]);\n\n  const handleChange = e => {\n    setFilter(e.target.value);\n  };\n\n  return (\n    <Form className=\"mb-1\">\n      <Form.Group>\n        <Form.Label>Find contacts by Name</Form.Label>\n        <Form.Control\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </Form.Group>\n    </Form>\n  );\n};\n","import PropTypes from 'prop-types';\nimport { DEFAULT_BREAKPOINTS, DEFAULT_MIN_BREAKPOINT } from './ThemeProvider';\nexport function responsivePropType(propType) {\n  return PropTypes.oneOfType([propType, PropTypes.shape({\n    xs: propType,\n    sm: propType,\n    md: propType,\n    lg: propType,\n    xl: propType,\n    xxl: propType\n  })]);\n}\nexport default function createUtilityClassName(utilityValues, breakpoints = DEFAULT_BREAKPOINTS, minBreakpoint = DEFAULT_MIN_BREAKPOINT) {\n  const classes = [];\n  Object.entries(utilityValues).forEach(([utilName, utilValue]) => {\n    if (utilValue != null) {\n      if (typeof utilValue === 'object') {\n        breakpoints.forEach(brkPoint => {\n          const bpValue = utilValue[brkPoint];\n          if (bpValue != null) {\n            const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n            classes.push(`${utilName}${infix}-${bpValue}`);\n          }\n        });\n      } else {\n        classes.push(`${utilName}-${utilValue}`);\n      }\n    }\n  });\n  return classes;\n}","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport createUtilityClassName, { responsivePropType } from './createUtilityClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Stack = /*#__PURE__*/React.forwardRef(({\n  as: Component = 'div',\n  bsPrefix,\n  className,\n  direction,\n  gap,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, direction === 'horizontal' ? 'hstack' : 'vstack');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  return /*#__PURE__*/_jsx(Component, {\n    ...props,\n    ref: ref,\n    className: classNames(className, bsPrefix, ...createUtilityClassName({\n      gap\n    }, breakpoints, minBreakpoint))\n  });\n});\nStack.displayName = 'Stack';\nexport default Stack;","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { Loader } from 'components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/contacts/selectors';\nimport { Stack } from 'react-bootstrap';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nconst ContactsPage = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <h1 className=\"text-center my-1\">Contacts</h1>\n      <Stack\n        className=\"justify-content-center align-items-start mt-4\"\n        direction=\"horizontal\"\n        gap={5}\n      >\n        <div>\n          <ContactForm />\n        </div>\n        <div>\n          <Filter />\n          {isLoading && !error ? <Loader /> : <ContactList />}\n        </div>\n      </Stack>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleItems","filter","item","filtered","toLowerCase","includes","ContactForm","dispatch","useDispatch","useSelector","Form","className","onSubmit","evt","preventDefault","form","currentTarget","elements","number","alert","addContact","reset","styles","controlId","type","pattern","title","required","Button","Contact","contact","variant","onClick","deleteContact","id","ContactList","visibleItems","Filter","useState","setFilter","useEffect","handleFilter","onChange","e","target","createUtilityClassName","utilityValues","breakpoints","DEFAULT_BREAKPOINTS","minBreakpoint","DEFAULT_MIN_BREAKPOINT","classes","forEach","utilName","utilValue","brkPoint","bpValue","infix","Stack","React","ref","as","Component","bsPrefix","direction","gap","props","useBootstrapPrefix","useBootstrapBreakpoints","useBootstrapMinBreakpoint","_jsx","classNames","displayName","fetchContacts","Loader"],"sourceRoot":""}